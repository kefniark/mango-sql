name: PR Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents:      read
  actions:       read
  pull-requests: write

jobs:
  test:
    name: "Code Testing"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: mangosql
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv
      - name: Run Test
        shell: devenv shell bash -- -e {0}
        run: |
          echo $(go env GOPATH)/bin >> $GITHUB_ENV
          just generate
          just test
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

  lint:
    name: "Code Linting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v15
        with:
          name: mangosql
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv
      - name: Run Lint
        shell: devenv shell bash -- -e {0}
        run: |
          echo $(go env GOPATH)/bin >> $GITHUB_ENV
          just generate
          just lint

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: fgrosse/go-coverage-report@v1.0.2
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"
