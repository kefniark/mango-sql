type LogLevel int
const (
	Debug LogLevel = iota + 1
	Info
	Warn
	Error
)

func (ctx DBContext) logQuery(level LogLevel, msg string, err error, duration time.Duration, sql string, args ...interface{}) {
	if err != nil {
		ctx.logger.Error().Err(err).Any("args", args).Str("sql", sql).Msg(msg)
		return
	}

	if level < Warn && duration > time.Millisecond*500 {
		level = Warn
		msg = "[SLOW QUERY] " + msg
	}

	switch level {
	case Debug:
		ctx.logger.Debug().Dur("duration", duration).Any("args", args).Str("sql", sql).Msg(msg)
	case Info:
		ctx.logger.Info().Dur("duration", duration).Any("args", args).Str("sql", sql).Msg(msg)
	case Warn:
		ctx.logger.Warn().Dur("duration", duration).Any("args", args).Str("sql", sql).Msg(msg)
	case Error:
		ctx.logger.Error().Dur("duration", duration).Any("args", args).Str("sql", sql).Msg(msg)
	}
}

